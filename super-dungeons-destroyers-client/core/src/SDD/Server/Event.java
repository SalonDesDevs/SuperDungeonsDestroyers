// automatically generated by the FlatBuffers compiler, do not modify

package SDD.Server;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Event extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_11_1(); }
  public static Event getRootAsEvent(ByteBuffer _bb) { return getRootAsEvent(_bb, new Event()); }
  public static Event getRootAsEvent(ByteBuffer _bb, Event obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Event __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte eventType() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public boolean mutateEventType(byte event_type) { int o = __offset(4); if (o != 0) { bb.put(o + bb_pos, event_type); return true; } else { return false; } }
  public Table event(Table obj) { int o = __offset(6); return o != 0 ? __union(obj, o) : null; }

  public static int createEvent(FlatBufferBuilder builder,
      byte event_type,
      int eventOffset) {
    builder.startTable(2);
    Event.addEvent(builder, eventOffset);
    Event.addEventType(builder, event_type);
    return Event.endEvent(builder);
  }

  public static void startEvent(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addEventType(FlatBufferBuilder builder, byte eventType) { builder.addByte(0, eventType, 0); }
  public static void addEvent(FlatBufferBuilder builder, int eventOffset) { builder.addOffset(1, eventOffset, 0); }
  public static int endEvent(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
}

